@startuml Database Entity-Relationship Class Diagram

!define PRIMARY_KEY <&key> 
!define FOREIGN_KEY <&link-intact>

' Core Business Entity
class Business {
    PRIMARY_KEY id : bigint
    documentid : bigint FOREIGN_KEY
    ruc : char(11)
    business_name : varchar(100)
    tradename : varchar(100)
    slogan : text
    mobile : varchar(10)
    mobile_refrence : varchar(10)
    email : varchar(200)
    password : varchar(200)
    server_host : varchar(200)
    port : varchar(50)
    address : text
    department : varchar(100)
    province : varchar(100)
    district : varchar(100)
    ubigeo : char(6)
    footer_text : text
    currencyid : bigint FOREIGN_KEY
    print_format : varchar(100)
    logotyope : varchar(200)
    logo_login : varchar(200)
    logo_email : varchar(1000)
    favicon : varchar(200)
    country_code : varchar(20)
    google_apikey : text
    reniec_apikey : text
    background : varchar(100)
    whatsapp_api : varchar(100)
    whatsapp_key : varchar(100)
    --
    + getBusiness()
    + updateConfiguration()
    + getWhatsAppConfig()
    + getEmailConfig()
}

' Client Management
class Clients {
    PRIMARY_KEY id : bigint
    names : varchar(100)
    surnames : varchar(100)
    documentid : bigint FOREIGN_KEY
    document : varchar(15)
    mobile : varchar(10)
    mobile_optional : varchar(10)
    email : varchar(100)
    address : text
    reference : text
    note : varchar(255)
    latitud : varchar(50)
    longitud : varchar(50)
    state : bigint
    net_router : int
    net_name : varchar(128)
    net_password : varchar(128)
    net_localaddress : varchar(64)
    net_ip : varchar(64)
    nap_cliente_id : int
    ap_cliente_id : int
    zonaid : bigint
    --
    + getFullName()
    + activate()
    + suspend()
    + cancel()
    + getNetworkConfig()
    + updateLocation()
    + getActiveContracts()
    + getPendingBills()
}

' User Management
class Users {
    PRIMARY_KEY id : bigint
    documentid : bigint FOREIGN_KEY
    document : varchar(15)
    names : varchar(100)
    surnames : varchar(100)
    mobile : varchar(10)
    email : varchar(100)
    address : text
    department : varchar(100)
    province : varchar(100)
    district : varchar(100)
    password : varchar(200)
    salt : varchar(15)
    temptoken : varchar(32)
    temp_date : datetime
    registration_date : datetime
    profiles : text
    state : bigint
    --
    + login()
    + authenticate()
    + getPermissions()
    + changePassword()
    + getProfile()
    + isActive()
}

' Contract Management
class Contracts {
    PRIMARY_KEY id : bigint
    userid : bigint FOREIGN_KEY
    clientid : bigint FOREIGN_KEY
    internal_code : varchar(50)
    payday : bigint
    create_invoice : bigint
    days_grace : bigint
    discount : bigint
    discount_price : decimal(12,2)
    months_discount : bigint
    remaining_discount : bigint
    contract_date : datetime
    suspension_date : date
    finish_date : date
    state : bigint
    --
    + activate()
    + suspend()
    + terminate()
    + calculateMonthlyAmount()
    + getServices()
    + applyDiscount()
    + isActive()
    + getDaysOverdue()
}

' Billing System
class Bills {
    PRIMARY_KEY id : bigint
    userid : bigint FOREIGN_KEY
    clientid : bigint FOREIGN_KEY
    voucherid : bigint FOREIGN_KEY
    serieid : bigint FOREIGN_KEY
    internal_code : varchar(50)
    correlative : bigint
    date_issue : date
    expiration_date : date
    billed_month : date
    subtotal : decimal(12,2)
    discount : decimal(12,2)
    total : decimal(12,2)
    amount_paid : decimal(12,2)
    remaining_amount : decimal(12,2)
    type : bigint
    sales_method : bigint
    observation : text
    promise_enabled : tinyint
    promise_date : date
    promise_set_date : date
    promise_comment : varchar(512)
    state : bigint
    compromise_date : date
    --
    + generatePDF()
    + markAsPaid()
    + addPayment()
    + isOverdue()
    + calculatePenalty()
    + setPromise()
    + sendNotification()
}

' Payment Management
class Payments {
    PRIMARY_KEY id : bigint
    billid : bigint FOREIGN_KEY
    userid : bigint FOREIGN_KEY
    clientid : bigint FOREIGN_KEY
    voucherid : bigint FOREIGN_KEY
    serieid : bigint FOREIGN_KEY
    internal_code : varchar(50)
    correlative : bigint
    payment_method : bigint FOREIGN_KEY
    date_payment : datetime
    amount : decimal(12,2)
    comment : text
    state : bigint
    --
    + processPayment()
    + generateReceipt()
    + allocateToInvoices()
    + validateAmount()
    + sendConfirmation()
}

' Service Catalog
class Services {
    PRIMARY_KEY id : bigint
    category : varchar(50)
    code_service : varchar(50)
    name : varchar(100)
    description : text
    price : decimal(12,2)
    currency : bigint
    unit : varchar(50)
    state : bigint
    --
    + getPrice()
    + isActive()
    + updatePrice()
    + getDescription()
}

' Contract Details (Services assigned to contracts)
class DetailContracts {
    PRIMARY_KEY id : bigint
    contractid : bigint FOREIGN_KEY
    serviceid : bigint FOREIGN_KEY
    price : decimal(12,2)
    state : bigint
    --
    + calculateTotal()
    + activate()
    + suspend()
}

' Bill Details (Service line items in bills)
class DetailBills {
    PRIMARY_KEY id : bigint
    billid : bigint FOREIGN_KEY
    description : varchar(200)
    quantity : bigint
    unit_price : decimal(12,2)
    total_cost : decimal(12,2)
    --
    + calculateLineTotal()
    + getDescription()
}

' Network Infrastructure
class NetworkRouters {
    PRIMARY_KEY id : bigint
    name : varchar(100)
    hostname : varchar(100)
    username : varchar(100)
    password : varchar(100)
    port : varchar(10)
    state : bigint
    --
    + connect()
    + createPPPoE()
    + createQueue()
    + disconnect()
    + testConnection()
}

class NetworkZones {
    PRIMARY_KEY id : bigint
    name : varchar(100)
    description : text
    state : bigint
    --
    + getClients()
    + getRouters()
    + isActive()
}

' NAP Infrastructure
class CajaNap {
    PRIMARY_KEY id : int
    nombre : varchar(100)
    longitud : varchar(100)
    latitud : varchar(100)
    puertos : int
    detalles : varchar(100)
    ubicacion : varchar(100)
    tipo : varchar(100)
    color_tubo : varchar(100)
    color_hilo : varchar(100)
    zonaId : int
    --
    + getAvailablePorts()
    + assignClient()
    + getLocation()
    + getConnectedClients()
}

class CajaNapClientes {
    PRIMARY_KEY id : int
    cliente_id : int
    nap_id : int FOREIGN_KEY
    puerto : varchar(100)
    --
    + assignPort()
    + releasePort()
    + getPortStatus()
}

' Access Points
class ApClientes {
    PRIMARY_KEY id : int
    nombre : varchar(100)
    ip : varchar(100)
    version : varchar(100)
    --
    + getStatus()
    + connect()
    + getConnectedClients()
}

' Document Types
class DocumentType {
    PRIMARY_KEY id : bigint
    document_type : varchar(100)
    state : bigint
    --
    + isActive()
    + getTypeName()
}

' Currency
class Currency {
    PRIMARY_KEY id : bigint
    currency_iso : varchar(3)
    language : varchar(3)
    currency_name : varchar(50)
    money : varchar(30)
    money_plural : varchar(50)
    symbol : varchar(3)
    registration_date : datetime
    state : bigint
    --
    + format()
    + getSymbol()
    + isActive()
}

' Vouchers and Series
class Vouchers {
    PRIMARY_KEY id : bigint
    voucher_type : varchar(100)
    code : varchar(10)
    sunat_code : varchar(10)
    state : bigint
    --
    + isActive()
    + getCode()
}

class VoucherSeries {
    PRIMARY_KEY id : bigint
    voucherid : bigint FOREIGN_KEY
    serie : varchar(10)
    correlative : bigint
    state : bigint
    --
    + getNextCorrelative()
    + updateCorrelative()
    + isActive()
}

' Payment Methods
class FormsPayment {
    PRIMARY_KEY id : bigint
    payment_method : varchar(100)
    state : bigint
    --
    + isActive()
    + getMethodName()
}

' Products
class Products {
    PRIMARY_KEY id : bigint
    categoryid : bigint FOREIGN_KEY
    code : varchar(50)
    name : varchar(100)
    description : text
    price : decimal(12,2)
    unit_measurement : varchar(50)
    stock : bigint
    state : bigint
    --
    + updateStock()
    + getPrice()
    + isAvailable()
    + checkStock()
}

class ProductCategory {
    PRIMARY_KEY id : bigint
    category : varchar(100)
    state : bigint
    --
    + isActive()
    + getProducts()
}

' Support System
class Tickets {
    PRIMARY_KEY id : bigint
    userid : bigint FOREIGN_KEY
    clientid : bigint FOREIGN_KEY
    ticketid : varchar(50)
    title : varchar(200)
    description : text
    priority : bigint
    state : bigint
    registration_date : datetime
    date_asigned : datetime
    date_closed : datetime
    --
    + assign()
    + close()
    + escalate()
    + updateStatus()
    + addSolution()
}

class TicketSolution {
    PRIMARY_KEY id : bigint
    ticketid : bigint FOREIGN_KEY
    userid : bigint FOREIGN_KEY
    solution : text
    date_solution : datetime
    --
    + addSolution()
    + getSolution()
}

' Installation Management
class Facility {
    PRIMARY_KEY id : bigint
    userid : bigint FOREIGN_KEY
    clientid : bigint FOREIGN_KEY
    internal_code : varchar(50)
    installation_date : date
    cost : decimal(12,2)
    observation : text
    state : bigint
    --
    + schedule()
    + complete()
    + addDetails()
    + calculateCost()
}

class DetailFacility {
    PRIMARY_KEY id : bigint
    facilityid : bigint FOREIGN_KEY
    technicalid : bigint FOREIGN_KEY
    observation : text
    date : datetime
    --
    + addTechnician()
    + updateObservation()
}

' File Management
class Archivos {
    PRIMARY_KEY id : int
    nombre : varchar(100)
    tipo : varchar(100)
    size : int
    ruta : text
    tabla : varchar(100)
    object_id : int
    --
    + upload()
    + delete()
    + getPath()
    + getSize()
}

' Email System
class Emails {
    PRIMARY_KEY id : bigint
    billid : bigint FOREIGN_KEY
    clientid : bigint FOREIGN_KEY
    email : varchar(100)
    subject : varchar(200)
    message : text
    attachment : varchar(300)
    state : bigint
    date_send : datetime
    --
    + send()
    + attachFile()
    + queue()
    + markAsSent()
}

' Automation System
class Cronjobs {
    PRIMARY_KEY id : int
    description : varchar(256)
    frequency : int
    parm : varchar(64)
    parmdesc : varchar(128)
    parmx : varchar(256)
    lastrun : int
    lastresult : varchar(256)
    code : varchar(16)
    status : int
    --
    + execute()
    + schedule()
    + enable()
    + disable()
    + getLastResult()
}

' System Configuration
class Modules {
    PRIMARY_KEY id : bigint
    module : varchar(50)
    description : text
    state : bigint
    --
    + isActive()
    + enable()
    + disable()
}

class Permits {
    PRIMARY_KEY id : bigint
    module : bigint FOREIGN_KEY
    profile : bigint FOREIGN_KEY
    read_permit : tinyint
    write_permit : tinyint
    update_permit : tinyint
    delete_permit : tinyint
    --
    + hasPermission()
    + grantPermission()
    + revokePermission()
}

class Profiles {
    PRIMARY_KEY id : bigint
    profile : varchar(100)
    description : text
    state : bigint
    --
    + getPermissions()
    + isActive()
}

' RELATIONSHIPS
Business ||--o{ Currency : currencyid
Business ||--o{ DocumentType : documentid

Clients ||--o{ DocumentType : documentid
Clients ||--o{ NetworkZones : zonaid
Clients ||--o{ CajaNapClientes : cliente_id
Clients ||--o{ ApClientes : ap_cliente_id

Users ||--o{ DocumentType : documentid

Contracts ||--o{ Users : userid
Contracts ||--o{ Clients : clientid
Contracts ||--o{ DetailContracts : contractid

DetailContracts ||--o{ Services : serviceid

Bills ||--o{ Users : userid
Bills ||--o{ Clients : clientid
Bills ||--o{ Vouchers : voucherid
Bills ||--o{ VoucherSeries : serieid
Bills ||--o{ DetailBills : billid

Payments ||--o{ Bills : billid
Payments ||--o{ Users : userid
Payments ||--o{ Clients : clientid
Payments ||--o{ Vouchers : voucherid
Payments ||--o{ VoucherSeries : serieid
Payments ||--o{ FormsPayment : payment_method

VoucherSeries ||--o{ Vouchers : voucherid

Products ||--o{ ProductCategory : categoryid

Tickets ||--o{ Users : userid
Tickets ||--o{ Clients : clientid
Tickets ||--o{ TicketSolution : ticketid

TicketSolution ||--o{ Users : userid

Facility ||--o{ Users : userid
Facility ||--o{ Clients : clientid
Facility ||--o{ DetailFacility : facilityid

DetailFacility ||--o{ Users : technicalid

Emails ||--o{ Bills : billid
Emails ||--o{ Clients : clientid

CajaNap ||--o{ CajaNapClientes : nap_id

Permits ||--o{ Modules : module
Permits ||--o{ Profiles : profile

@enduml